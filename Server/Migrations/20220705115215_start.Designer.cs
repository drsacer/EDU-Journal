// <auto-generated />
using System;
using EDU_Journal.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EDUJournal.Server.Migrations
{
    [DbContext(typeof(JournalDbContext))]
    [Migration("20220705115215_start")]
    partial class start
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EDU_Journal.Server.Entities.NonWorkingDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("varchar(300)");

                    b.Property<int>("SickLeaveId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SickLeaveId");

                    b.HasIndex("UserId");

                    b.ToTable("NonWorkingDays");
                });

            modelBuilder.Entity("EDU_Journal.Server.Entities.PublicHolidays", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("PublicHolidays");
                });

            modelBuilder.Entity("EDU_Journal.Server.Entities.SickLeave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id");

                    b.ToTable("SickLeave");
                });

            modelBuilder.Entity("EDU_Journal.Server.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("EDU_Journal.Server.Entities.Vacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("TotalDays")
                        .HasColumnType("tinyint");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Vacation");
                });

            modelBuilder.Entity("EDU_Journal.Server.Entities.WorkingDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("varchar(300)");

                    b.Property<TimeSpan>("PauseDuration")
                        .HasColumnType("time");

                    b.Property<int?>("SickLeaveId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SickLeaveId");

                    b.HasIndex("UserId", "Date");

                    b.ToTable("WorkingDays");
                });

            modelBuilder.Entity("EDU_Journal.Server.Entities.NonWorkingDay", b =>
                {
                    b.HasOne("EDU_Journal.Server.Entities.SickLeave", "SickLeave")
                        .WithMany()
                        .HasForeignKey("SickLeaveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDU_Journal.Server.Entities.User", "User")
                        .WithMany("NonWorkingDays")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SickLeave");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EDU_Journal.Server.Entities.Vacation", b =>
                {
                    b.HasOne("EDU_Journal.Server.Entities.User", "User")
                        .WithMany("Vacation")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EDU_Journal.Server.Entities.WorkingDay", b =>
                {
                    b.HasOne("EDU_Journal.Server.Entities.SickLeave", null)
                        .WithMany("WorkingDays")
                        .HasForeignKey("SickLeaveId");

                    b.HasOne("EDU_Journal.Server.Entities.User", "User")
                        .WithMany("WorkingDays")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EDU_Journal.Server.Entities.SickLeave", b =>
                {
                    b.Navigation("WorkingDays");
                });

            modelBuilder.Entity("EDU_Journal.Server.Entities.User", b =>
                {
                    b.Navigation("NonWorkingDays");

                    b.Navigation("Vacation");

                    b.Navigation("WorkingDays");
                });
#pragma warning restore 612, 618
        }
    }
}
